# Server Configuration
PORT=3001
NODE_ENV=development
HOST=localhost

# Database Configuration
DATABASE_VERBOSE=false  # Set to 'true' to enable SQL query logging in console

# CORS Configuration (choose one option)
# Option 1: Multiple origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,http://localhost:5176,http://localhost:5179,http://localhost:3001,http://localhost:3120,http://localhost:3121

# Option 2: Single origin
# CORS_ORIGIN=http://localhost:5173

# Option 3: Allow all origins (not recommended for production)
# CORS_ORIGINS=*

# GitHub Integration (optional)
GITHUB_REPO=owner/repo
GITHUB_TOKEN=your_github_personal_access_token

# GitHub Configuration Repository (optional)
# Repository containing configuration files and assets
GITHUB_CONFIG_REPO=owner/config-repo-name
GITHUB_CONFIG_TOKEN=your_github_config_access_token
GITHUB_CONFIG_BRANCH=main

# Asset Database Configuration (optional)
# PostgreSQL connection string for asset caching and fallback
# Format: postgresql://username:password@host:port/database_name
# Example: postgresql://myuser:mypass@localhost:5432/asset_cache
# Note: The database must already exist and have the 'asset' and 'asset_log' tables created
# If not configured, the system will operate without database caching (GitHub-only mode)
ASSET_DB=postgresql://user:password@host:port/database

# Asset Owner Configuration (required only if ASSET_DB is configured)
# These identify your application in the asset database
# ASSET_OWNER_CLASS: Category/type of application (e.g., 'application', 'service', 'api')
# ASSET_OWNER_NAME: Unique identifier for this specific instance/application
ASSET_OWNER_CLASS=application
ASSET_OWNER_NAME=owui-feedback

# Asset Cache Configuration (optional)
# ASSET_MEMORY_CACHE_ENABLED: Enable/disable in-memory caching for assets (true/false)
# ASSET_MEMORY_CACHE_TTL: Time-to-live for cached items in seconds (default: 300 = 5 minutes)
# Note: In-memory cache improves performance but may serve stale content
# Set to false during development or when you need immediate updates
ASSET_MEMORY_CACHE_ENABLED=true
ASSET_MEMORY_CACHE_TTL=300

# Configuration Asset Keys (optional)
# These specify the paths in the GitHub asset repository for configuration files
# If set, the application will load configurations from GitHub instead of local files
# The system will fall back to local files if GitHub is unavailable
# AGENT_CONFIG_ASSET_KEY: Path to agent configuration file in GitHub asset repo
# LLM_CONFIG_ASSET_KEY: Path to LLM configuration file in GitHub asset repo
# FILTER_WITH_SAMPLE: Path to filter prompt template file in GitHub asset repo
# FILTER_WITHOUT_SAMPLE: Path to filter prompt template file (without sample) in GitHub asset repo
# EXECUTE_DIRECT: Path to execute direct prompt template file in GitHub asset repo
# ENV_SETTINGS_ASSET_KEY: Path to environment settings file in GitHub asset repo
AGENT_CONFIG_ASSET_KEY=settings/agent-config.yaml
LLM_CONFIG_ASSET_KEY=settings/llm-config.yaml
FILTER_WITH_SAMPLE=prompts/filter-with-sample.prompt.txt
FILTER_WITHOUT_SAMPLE=prompts/filter-without-sample.prompt.txt
EXECUTE_DIRECT=prompts/execute-direct.prompt.txt
ENV_SETTINGS_ASSET_KEY=settings/env-settings

# Environment Settings Override (optional)
# OVERRIDE_ENV_VARS: If set to 'true', environment settings from the configuration repository
# will override existing environment variables. Default is 'false' (existing vars are preserved)
OVERRIDE_ENV_VARS=false

# Client Configuration Asset Key (optional)
# CLIENT_SETTINGS: Path to client configuration file in GitHub asset repo
# This file contains the runtime configuration for the frontend application
CLIENT_SETTINGS=settings/client-config.json

# Azure OpenAI Configuration (optional)
AZURE_OPENAI_API_KEY=your_azure_openai_api_key
AZURE_OPENAI_API_VERSION=2024-12-01-preview
AZURE_OPENAI_API_ENDPOINT=https://your-resource.openai.azure.com
AZURE_OPENAI_API_DEPLOYMENT_NAME=your-deployment-name

# Feature Flags (optional)
# Control visibility of tabs in the UI when viewing agent conversations
# Set to 'false' to hide the respective tabs (default: all true)
SHOW_DOCUMENTS=true
SHOW_RUNS=true
SHOW_CHECKPOINTS=true

# NBG OAuth Configuration
# NBG_OAUTH_ENABLED: Set to 'false' to disable authentication globally (default: true)
NBG_OAUTH_ENABLED=true

# NBG_OAUTH_ISSUER: NBG Identity Server URL (required when auth is enabled)
# Example: https://identity-dev.nbg.gr or https://identity.nbg.gr
NBG_OAUTH_ISSUER=https://your-nbg-identity-server.com

# NBG_CLIENT_ID: Your application's client ID from NBG (required)
NBG_CLIENT_ID=your-nbg-client-id

# NBG_CLIENT_SECRET: Your application's client secret from NBG (required)
NBG_CLIENT_SECRET=your-nbg-client-secret

# NBG_OAUTH_SCOPES: Space-separated list of OAuth scopes (default: openid profile email)
NBG_OAUTH_SCOPES=openid profile email api1

# BASE_URL: Your application's base URL for callbacks (default: http://localhost:PORT)
BASE_URL=http://localhost:3001

# PUBLIC_ENDPOINTS: Comma-separated list of additional public endpoints that don't require auth
# Default public endpoints: /health, /api-docs, /signin-nbg, /signout-callback-nbg, /api/auth
# Include /api/configuration and /api/config.json to allow clients to fetch configuration without authentication
PUBLIC_ENDPOINTS=/api/github/rate-limit,/api/llm/configurations,/api/configuration,/api/config.json,/config.json

# Token Validation Options (all default to true)
NBG_VALIDATE_ISSUER=true
NBG_VALIDATE_AUDIENCE=true
NBG_VALIDATE_EXPIRY=true
NBG_CLOCK_TOLERANCE=5
NBG_REQUIRED_CLAIMS=sub