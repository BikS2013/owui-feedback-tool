version: '3.8'

services:
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: owui-feedback-backend:dev
    container_name: owui-feedback-backend-dev
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js debugging port
    environment:
      - NODE_ENV=development
      - PORT=3001
      - CORS_ORIGIN=http://localhost:5173,http://localhost:3000
      # Database connection
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=feedback_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      # LLM API Keys (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      # Mount source code for hot reloading
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./node_modules:/app/node_modules
    networks:
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: owui-feedback-db-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=feedback_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: owui-feedback-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - backend-network
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data-dev:
  pgadmin-data: