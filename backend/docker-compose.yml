version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: owui-feedback-backend:latest
    container_name: owui-feedback-backend
    ports:
      - "3120:3001"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - PORT=3001
      - ALLOW_DEBUG_ENDPOINTS=true
      # Database connection (update with your values)
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-feedback_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      # LLM API Keys (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    networks:
      - backend-network
    volumes:
      # Mount for persistent data if needed
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Optional: PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: owui-feedback-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-feedback_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data: